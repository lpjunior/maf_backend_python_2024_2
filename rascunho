todo/
|_ app.py                         # Arquivo principal da aplicação
|_configurations/                 # Instância do SQLAlchemy
    |_ database.py
|_ repositories/
    |_task_repository.py          # Repositório de queries SQL
|_ controllers/
    |_ tarefa_controller.py       # Lógica das rotas e interação com as regras de negócio
|_ services/
    |_ tarefa_service.py          # Regras de negócio (validações, limites, etc.)
|_ models/
    |_ tarefa_model.py            # Estrutura dos dados de tarefa
|_ templates/
    |_ index.html
|_ static/
    |_ styles.css

Objetivo: Criar um web app oferecendo os recursos:
- Adicionar nova tarefa - ok
- Exibir a lista de tarefas - ok
- Marcar tarefas como concluídas - ok
- Remover tarefas da lista - ok

Permitir que trabalhem os seguintes conceitos:
- Rotas
- Renderização
- Interação de dados
- Organização dos dados
- Persistência de dados
- Permitir cadastro de usuários
- Gerenciar as tarefas por usuário
- Tela de login
- Interação via e-mail

* No primeiro momento os dados serão armazenados em memória

app.py
    foi definido 4 rotas
    / - exibe a lista de tarefas
    /adicionar - recebe via formulário uma nova tarefa e adiciona na lista
    /completar/<tarefa_id> - marca a tarefa como concluída
    /remover/<tarefa_id> - remove a tarefa da lista
    
  Está utilizando uma lista em memória. Cada tarefa é representada por um dicionário que armazena o conteúdo da tarefa.